/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * The JQL specifying the issues available in the evaluated Jira expression under the &#x60;issues&#x60; context variable. Not all issues returned by the JQL query will be loaded, but only a portion of them, as described by the &#x60;startAt&#x60; and &#x60;maxResults&#x60; properties. Iterate over pages by inspecting the meta data included in the response.
 */
@ApiModel(description = "The JQL specifying the issues available in the evaluated Jira expression under the `issues` context variable. Not all issues returned by the JQL query will be loaded, but only a portion of them, as described by the `startAt` and `maxResults` properties. Iterate over pages by inspecting the meta data included in the response.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-08-07T22:31:05.639+02:00[Europe/Prague]")
public class IssuesJqlBean {
/* xxxxxxxxxxxxx , , ,  */
  @JsonProperty("query")
  private String query;

  @JsonProperty("startAt")
  private Long startAt;

  @JsonProperty("maxResults")
  private Integer maxResults;

  public IssuesJqlBean query(String query) {
    this.query = query;
    return this;
  }

   /**
   * The JQL query.
   * @return query
  **/
  @ApiModelProperty(value = "The JQL query.")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public IssuesJqlBean startAt(Long startAt) {
    this.startAt = startAt;
    return this;
  }

   /**
   * The index of the first issue returned from the JQL query.
   * @return startAt
  **/
  @ApiModelProperty(value = "The index of the first issue returned from the JQL query.")
  public Long getStartAt() {
    return startAt;
  }

  public void setStartAt(Long startAt) {
    this.startAt = startAt;
  }

  public IssuesJqlBean maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * The maximum number of issues that will be included on the list. This value is currently capped at 1000 but the cap may change without notice.
   * @return maxResults
  **/
  @ApiModelProperty(value = "The maximum number of issues that will be included on the list. This value is currently capped at 1000 but the cap may change without notice.")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssuesJqlBean issuesJqlBean = (IssuesJqlBean) o;
    return Objects.equals(this.query, issuesJqlBean.query) &&
        Objects.equals(this.startAt, issuesJqlBean.startAt) &&
        Objects.equals(this.maxResults, issuesJqlBean.maxResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(query, startAt, maxResults);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssuesJqlBean {\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    startAt: ").append(toIndentedString(startAt)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

